buildscript {
	repositories {
		maven {
			url 'https://plugins.gradle.org/m2/'
		}
	}
	dependencies {
		classpath 'com.diffplug.gradle.spotless:spotless:1.3.2'
		classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.3'
		classpath 'org.ajoberstar:gradle-git:1.3.2'
		classpath "be.insaneprogramming.gradle:animalsniffer-gradle-plugin:+"
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'com.diffplug.gradle.spotless'
apply plugin: 'be.insaneprogramming.gradle.animalsniffer'

description = 'Open Test Alliance for the JVM'

repositories {
	mavenCentral()
}

compileJava {
	// please update the animalsniffer config if changing these settings
	sourceCompatibility = 1.6
	targetCompatibility = 1.6
}

compileTestJava {
	sourceCompatibility = 1.6
	targetCompatibility = 1.6
}

dependencies {
	testCompile("junit:junit:${junit4Version}")
}

javadoc {
	options.memberLevel = org.gradle.external.javadoc.JavadocMemberLevel.PROTECTED
	options.author = true
	options.header = 'Open Test Alliance for the JVM'
	options.addStringOption('Xdoclint:none', '-quiet')
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
	classifier = 'javadoc'
	from javadoc
}

artifacts {
	archives sourcesJar
	archives javadocJar
}

spotless {
	java {
		licenseHeaderFile rootProject.file('etc/spotless/apache-license-2.0.java')
		importOrder(['java', 'javax', 'com', 'org'])
		eclipseFormatFile rootProject.file('etc/eclipse/eclipse-formatter-settings.xml')

		trimTrailingWhitespace()
		endWithNewline()

		custom 'Lambda fix', { it.replace('} )', '})').replace('} ,', '},') }
	}
}

animalsniffer {
	signature = "org.codehaus.mojo.signature:java16:+@signature"
}

def signArtifacts = !project.version.contains('SNAPSHOT')

if (signArtifacts) {
	signing {
		sign configurations.archives
	}
}

uploadArchives {

	dependsOn check

	repositories {
		mavenDeployer {

			if (signArtifacts) {
				beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
			}

			def ossrhUsername = rootProject.hasProperty('ossrhUsername') ? rootProject.ossrhUsername : ''
			def ossrhPassword = rootProject.hasProperty('ossrhPassword') ? rootProject.ossrhPassword : ''

			repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
				authentication(userName: ossrhUsername, password: ossrhPassword)
			}

			snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
				authentication(userName: ossrhUsername, password: ossrhPassword)
			}

			pom.project {
				name "${project.group}:${project.name}"
				packaging 'jar'
				description "Open Test Alliance for the JVM"
				url 'https://github.com/ota4j-team/opentest4j'

				scm {
					connection 'scm:git:git://github.com/ota4j-team/opentest4j.git'
					developerConnection 'scm:git:git://github.com/ota4j-team/opentest4j.git'
					url 'https://github.com/ota4j-team/opentest4j'
				}

				licenses {
					license {
						name 'The Apache License, Version 2.0'
						url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
					}
				}

				developers {
					developer {
						id 'bechte'
						name 'Stefan Bechtold'
						email 'stefan.bechtold@me.com'
					}
					developer {
						id 'jlink'
						name 'Johannes Link'
						email 'business@johanneslink.net'
					}
					developer {
						id 'marcphilipp'
						name 'Marc Philipp'
						email 'mail@marcphilipp.de'
					}
					developer {
						id 'mmerdes'
						name 'Matthias Merdes'
						email 'Matthias.Merdes@heidelberg-mobil.com'
					}
					developer {
						id 'sbrannen'
						name 'Sam Brannen'
						email 'sam@sambrannen.com'
					}
				}
			}
		}
	}
}

spotless {
	format 'misc', {
		target project.fileTree(project.rootDir) {
			include '**/*.gradle', '**/*.md', '**/*.gitignore'
			exclude '.gradle/**/*.*'
		}
		indentWithTabs()
		trimTrailingWhitespace()
		endWithNewline()
	}
}

task wrapper(type: Wrapper) {
	distributionUrl = 'https://services.gradle.org/distributions/gradle-2.9-all.zip'
}
